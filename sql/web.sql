DROP TABLE TOURNAMENT_MATCH CASCADE;
DROP TABLE MEMBER_OF_TEAM;
DROP TABLE USER;
DROP TABLE ROLE;
DROP TABLE TOURNAMENT;
DROP TABLE SPORT;
DROP TABLE TEAM;
DROP TABLE PARTICIPANT;

CREATE TABLE ROLE(
    ROLE_ID INTEGER NOT NULL AUTO_INCREMENT,
    ROLE_NAME VARCHAR(30) NOT NULL,

    CONSTRAINT PK_ROLE_ID PRIMARY KEY (ROLE_ID)
);

CREATE TABLE USER(
    USER_ID INTEGER NOT NULL AUTO_INCREMENT,
    FIRST_NAME VARCHAR(30),
    SURNAME VARCHAR(30),
    EMAIL VARCHAR(50),
    ADDRESS VARCHAR(50),
    LOGIN VARCHAR(30),
    PASSWORD VARCHAR(255),
    IMAGE_URL VARCHAR(255),

    ROLE_ID INTEGER DEFAULT NULL,

    CONSTRAINT PK_KLIENT_ID PRIMARY KEY (USER_ID),
    CONSTRAINT FK_ROLE_ID FOREIGN KEY (ROLE_ID) REFERENCES ROLE(ROLE_ID)
);

CREATE TABLE SPORT(
    SPORT_ID INTEGER NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(30) NOT NULL,
    NUMBER_OF_PLAYERS INTEGER NOT NULL,

    CONSTRAINT PK_SPORT_ID PRIMARY KEY (SPORT_ID)
);

CREATE TABLE TOURNAMENT(
    TOURNAMENT_ID INTEGER NOT NULL AUTO_INCREMENT,
    TOURNAMENT_NAME VARCHAR(30) NOT NULL,
    DESCRIPTION VARCHAR(1000),
    START_DATE DATE NOT NULL,
    PRICEPOOL DECIMAL(20,2),
    IS_APPROVED INTEGER(1) DEFAULT 0 CHECK (IS_APPROVED IN (0,1)),
    NUMBER_OF_PARTICIPANTS INTEGER,
    MANAGER_ID INTEGER NOT NULL,
    SPORT_ID INTEGER NOT NULL,

    CONSTRAINT PK_TOURNAMENT_ID PRIMARY KEY (TOURNAMENT_ID),
    CONSTRAINT FK_TOURNAMENT_MANAGER_ID FOREIGN KEY (MANAGER_ID) REFERENCES USER(USER_ID),
    CONSTRAINT FK_SPORT_ID FOREIGN KEY (SPORT_ID) REFERENCES SPORT(SPORT_ID)
);


CREATE TABLE TEAM(
    TEAM_ID INTEGER NOT NULL AUTO_INCREMENT,
    TEAM_NAME VARCHAR(30) NOT NULL,
    LOGO_URL VARCHAR(255),
    NUMBER_OF_PLAYERS INTEGER DEFAULT 0,
    MANAGER_ID INTEGER NOT NULL,

    CONSTRAINT PK_TEAM_ID PRIMARY KEY (TEAM_ID),
    CONSTRAINT FK_TEAM_MANAGER_ID FOREIGN KEY (MANAGER_ID) REFERENCES USER(USER_ID)
);

CREATE TABLE MEMBER_OF_TEAM(
    TEAM_ID INTEGER NOT NULL,
    USER_ID INTEGER NOT NULL,

    CONSTRAINT PK_MEMBER_OF_TEAM_ID PRIMARY KEY(TEAM_ID, USER_ID),
    CONSTRAINT FK_MEMBER_TEAM_ID FOREIGN KEY (TEAM_ID) REFERENCES TEAM(TEAM_ID),
    CONSTRAINT FK_MEMBER_USER_ID FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID)
);

CREATE TABLE PARTICIPANT(
    PARTICIPANT_ID INTEGER NOT NULL AUTO_INCREMENT,
    PARTICIPANT_NAME VARCHAR(30),
    IS_APPROVED INTEGER(1) DEFAULT 0 CHECK (IS_APPROVED in (0,1)),
    PARTICIPANT_TYPE VARCHAR(6) NOT NULL CHECK(PARTICIPANT_TYPE IN ('team', 'user')),
    TEAM_ID INTEGER NULL,
    USER_ID INTEGER NULL,
    TOURNAMENT_ID INTEGER NOT NULL,

    CONSTRAINT PK_PARTICIPANT_ID PRIMARY KEY (PARTICIPANT_ID),
    CONSTRAINT FK_PARTICIPANT_TEAM_ID FOREIGN KEY (TEAM_ID) REFERENCES TEAM(TEAM_ID),
    CONSTRAINT FK_PARTICIPANT_USER_ID FOREIGN KEY (USER_ID) REFERENCES USER(USER_ID),
    CONSTRAINT FK_PARTICIPANT_TOURNAMENT_ID FOREIGN KEY (TOURNAMENT_ID) REFERENCES TOURNAMENT(TOURNAMENT_ID) ON DELETE CASCADE
);

CREATE TABLE TOURNAMENT_MATCH(
    MATCH_ID INTEGER NOT NULL AUTO_INCREMENT,
    RESULT VARCHAR(30),
    INDEX_OF_MATCH INTEGER NOT NULL,
    IS_FINISHED INTEGER(1) DEFAULT 0 CHECK (IS_FINISHED in (0,1)),
    WINNER_ID INTEGER NULL,
    PARTICIPANT1_ID INTEGER NULL,
    PARTICIPANT2_ID INTEGER NULL,
    TOURNAMENT_ID INTEGER NOT NULL,

    CONSTRAINT PK_MATCH_ID PRIMARY KEY (MATCH_ID),
    CONSTRAINT FK_WINNER_ID FOREIGN KEY (WINNER_ID) REFERENCES PARTICIPANT(PARTICIPANT_ID),
    CONSTRAINT FK_PARTICIPANT1_ID FOREIGN KEY (PARTICIPANT1_ID) REFERENCES PARTICIPANT(PARTICIPANT_ID),
    CONSTRAINT FK_PARTICIPANT2_ID FOREIGN KEY (PARTICIPANT2_ID) REFERENCES PARTICIPANT(PARTICIPANT_ID),
    CONSTRAINT FK_TOURNAMENT_ID FOREIGN KEY (TOURNAMENT_ID) REFERENCES TOURNAMENT(TOURNAMENT_ID) ON DELETE CASCADE
);